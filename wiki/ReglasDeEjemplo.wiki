#summary Listamos reglas de ejemplos de diferente complejidad

= Reglas de ejemplo =
Vamos a listar una serie de reglas, de más sencillas a más complejas, para ver las posibilidades que tenemos a la hora de crear nuestro equipo.

== Reglas sencillas ==

=== Barrer con el seis ===
Esta regla es de las más típicas que hay. Consiste en hacer que el seis, la ficha más poderosa, llegue hasta el otro lado del tablero y barra las filas del enemigo. Vamos a suponer que partimos con el siguiente fichero de formación:

{{{
2:2:2:2:2:2:2:6
2:5:5:4:4:3:3:1
}}}

Esta estrategia se ejecuta en dos partes. En la primera parte, comprobamos que exista la ficha 6 de nuestro equipo y que *no se encuentre* en la fila superior. En tal caso, hacemos que se mueva verticalmente hacia el enemigo.
{{{
(defrule EQUIPO-A::barrido6_paso1
    (declare (salience 80))
    (tiempo ?t)
    (ficha (equipo "A") (num ?n) (pos-y ?y) (puntos 6))
    (test (<> ?y 8))
    =>
    (assert (mueve (num ?n) (mov 3) (tiempo ?t)))
)
}}}

En la segunda parte, comprobamos que exista la ficha 6 y que ya se encuentre en la retaguardia del enemigo (pos-y 8), caso en el que hacemos que barra.
{{{
(defrule EQUIPO-A::barrido6_paso2
    (declare (salience 80))
    (tiempo ?t)
    (ficha (equipo "A") (num ?n) (pos-x ?x) (pos-y 8) (puntos 6))
    (test (<> ?x 8))
    =>
    (assert (mueve (num ?n) (mov 1) (tiempo ?t)))
)
}}}

=== Barrido con peones ===
Esta regla hará que todos los peones intenten barrer el tablero, llevándose por delante al mayor número de fichas posible. Suponemos que tenemos a todos los peones (ficha número 2) en la fila de vanguardia.

La idea es que vayan en fila. Así, una vez que todos los peones estén en la fila 2, empiecen a avanzar a la fila 3, en lugar de que ninguno de ellos se escape del pelotón.

{{{
(defrule EQUIPO-A::avance_peones_f2
    (declare (salience 60))
    (tiempo ?t)
    (ficha (equipo "A") (num ?n) (pos-y 2) (puntos 2))
    =>
    (assert (mueve (num ?n) (mov 3) (tiempo ?t)))
)

(defrule EQUIPO-A::avance_peones_f3
    (declare (salience 59))
    (tiempo ?t)
    (ficha (equipo "A") (num ?n) (pos-y 3) (puntos 2))
    =>
    (assert (mueve (num ?n) (mov 3) (tiempo ?t)))
)
(defrule EQUIPO-A::avance_peones_f4
    (declare (salience 58))
    (tiempo ?t)
    (ficha (equipo "A") (num ?n) (pos-y 4) (puntos 2))
    =>
    (assert (mueve (num ?n) (mov 3) (tiempo ?t)))
)
(defrule EQUIPO-A::avance_peones_f5
    (declare (salience 57))
    (tiempo ?t)
    (ficha (equipo "A") (num ?n) (pos-y 5) (puntos 2))
    =>
    (assert (mueve (num ?n) (mov 3) (tiempo ?t)))
)
(defrule EQUIPO-A::avance_peones_f6
    (declare (salience 56))
    (tiempo ?t)
    (ficha (equipo "A") (num ?n) (pos-y 6) (puntos 2))
    =>
    (assert (mueve (num ?n) (mov 3) (tiempo ?t)))
)
(defrule EQUIPO-A::avance_peones_f7
    (declare (salience 55))
    (tiempo ?t)
    (ficha (equipo "A") (num ?n) (pos-y 7) (puntos 2))
    =>
    (assert (mueve (num ?n) (mov 3) (tiempo ?t)))
)
}}}

Existe una regla para cada fila, ya que hacerlo de manera genérica incrementaría la complejidad mucho. Además, así es más sencillo controlar la prioridad de los movimientos.